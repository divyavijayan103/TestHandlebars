<div id="target"></div><link rel="stylesheet" href="https://www.w3schools.com/w3css/4/w3.css"><link rel='stylesheet' href='https://fonts.googleapis.com/css?family=Roboto'><link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/4.7.0/css/font-awesome.min.css"><!-- <script>alert("inside iframe!");</script> --><style>  body {    background-color: white;  }</style><script id="template" type="text/x-handlebars-template">    <div class="w3-content w3-margin-top" style="max-width:1400px;">        <div class="w3-row-padding">            <div class="w3-third">                <div class="w3-white w3-text-grey w3-card-4">                    <div class="w3-display-container">                        <img src="./avatar_hat.jpeg" style="width:100%" alt="Avatar">                        <div class="w3-display-bottomleft w3-container w3-text-black">                            <h2>{{"first_name"}} {{"first_name"}}</h2>                        </div>                    </div>                    <div class="w3-container">                        <p><i class="fa fa-briefcase fa-fw w3-margin-right w3-large w3-text-teal"></i>{{"summary"}}</p>                        <p><i class="fa fa-home fa-fw w3-margin-right w3-large w3-text-teal"></i>{{"city"}}, {{"Country"}}</p>                        <p><i class="fa fa-envelope fa-fw w3-margin-right w3-large w3-text-teal"></i>{{"email"}}</p>                        <p><i class="fa fa-phone fa-fw w3-margin-right w3-large w3-text-teal"></i>{{"phone_number"}}</p>                        <hr>                        <p class="w3-large"><b><i class="fa fa-asterisk fa-fw w3-margin-right w3-text-teal"></i>Skills</b></p>                        {{#Skills}}                        <p>{{Skill}}</p>                        <div class="w3-light-grey w3-round-xlarge w3-small">                            <div class="w3-container w3-center w3-round-xlarge w3-teal" style="width:{{"barLength"}}">{{Level}}</div>                    </div>                    {{/Skills}}                    <br>                    <!-- <p class="w3-large w3-text-theme"><b><i class="fa fa-globe fa-fw w3-margin-right w3-text-teal"></i>Languages</b></p>                    <p>English</p>                    <div class="w3-light-grey w3-round-xlarge">                      <div class="w3-round-xlarge w3-teal" style="height:24px;width:100%"></div>                    </div>                    <p>Spanish</p>                    <div class="w3-light-grey w3-round-xlarge">                      <div class="w3-round-xlarge w3-teal" style="height:24px;width:55%"></div>                    </div>                    <p>German</p>                    <div class="w3-light-grey w3-round-xlarge">                      <div class="w3-round-xlarge w3-teal" style="height:24px;width:25%"></div>                    </div> -->                    <br>                </div>            </div><br>            <!-- End Left Column -->        </div>        <!-- Right Column -->        <div class="w3-twothird">            <div class="w3-container w3-card w3-white w3-margin-bottom">                <h2 class="w3-text-grey w3-padding-16"><i                        class="fa fa-suitcase fa-fw w3-margin-right w3-xxlarge w3-text-teal"></i>Work Experience</h2>                {{#Experience}}                <div class="w3-container">                    <h5 class="w3-opacity"><b>{{"Job Title"}} - {{"Company Name"}}</b></h5>                    <h6 class="w3-text-teal"><i class="fa fa-calendar fa-fw w3-margin-right"></i>{{StartString}} -                        <!-- <span class="w3-tag w3-teal w3-round">Current</span> -->                        {{#if EndFound}}                        {{EndString}}                        {{else}}                        <span class="w3-tag w3-teal w3-round">Current</span>                        {{/if}}                    </h6>                    <p>{{Responsibilities}}</p>                    <hr>                </div>                {{/Experience}}            </div>            <!-- <div class="w3-container w3-card w3-white w3-margin-bottom">              <div class="w3-container">                <h5 class="w3-opacity"><b>Front End Developer / w3schools.com</b></h5>                <h6 class="w3-text-teal"><i class="fa fa-calendar fa-fw w3-margin-right"></i>Jan 2015 - <span                    class="w3-tag w3-teal w3-round">Current</span></h6>                <p>Lorem ipsum dolor sit amet. Praesentium magnam consectetur vel in deserunt aspernatur est reprehenderit sunt                  hic. Nulla tempora soluta ea et odio, unde doloremque repellendus iure, iste.</p>                <hr>              </div>              <div class="w3-container">                <h5 class="w3-opacity"><b>Web Developer / something.com</b></h5>                <h6 class="w3-text-teal"><i class="fa fa-calendar fa-fw w3-margin-right"></i>Mar 2012 - Dec 2014</h6>                <p>Consectetur adipisicing elit. Praesentium magnam consectetur vel in deserunt aspernatur est reprehenderit sunt                  hic. Nulla tempora soluta ea et odio, unde doloremque repellendus iure, iste.</p>                <hr>              </div>              <div class="w3-container">                <h5 class="w3-opacity"><b>Graphic Designer / designsomething.com</b></h5>                <h6 class="w3-text-teal"><i class="fa fa-calendar fa-fw w3-margin-right"></i>Jun 2010 - Mar 2012</h6>                <p>Lorem ipsum dolor sit amet, consectetur adipisicing elit. </p><br>              </div>            </div> -->            <div class="w3-container w3-card w3-white w3-margin-bottom">                <h2 class="w3-text-grey w3-padding-16"><i                        class="fa fa-certificate fa-fw w3-margin-right w3-xxlarge w3-text-teal"></i>Projects</h2>                {{#Projects}}                <div class="w3-container">                    <h5 class="w3-opacity"><b>{{"Project name"}}</b></h5>                    <h6 class="w3-text-teal"><i class="fa fa-link fa-fw w3-margin-right"></i><a href={{"Website Link"}} target="_blank" >{{"Website Link"}}</a></h6>                    <p>{{"Description"}}</p>                    <hr>                </div>                {{/Projects}}            </div>            <!-- End Right Column -->        </div>    </div>    </div>    </div></script>
